GitHub: git clone someone else's repository & git push to your own repository

I'm going to refer to someone else's repository as the other repository.

Create a new repository at github.com. (this is your repository)
Give it the same name as the other repository.
Don't initialize it with a README, .gitignore, or license.

Clone the other repository to your local machine. (if you haven't done so already)
git clone https://github.com/other-account/other-repository.git

Rename the local repository's current 'origin' to 'upstream'.
git remote rename origin upstream

Give the local repository an 'origin' that points to your repository.
git remote add origin https://github.com/your-account/your-repository.git

Push the local repository to your repository on github.
git push origin main
Now 'origin' points to your repository & 'upstream' points to the other repository.

Create a new branch for your changes with git checkout -b my-feature-branch.
You can git commit as usual to your repository.
Use git pull upstream main to pull changes from the other repository to your main branch.
